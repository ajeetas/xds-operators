{{- if eq .Values.citrixCPX true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citrix-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
  template:
    metadata:
      labels:
        app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        prometheus.io/port: "{{ .Values.metricExporter.port }}"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: nslogin
        secret:
          secretName: nslogin
      - name: citrix-ingressgateway-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
      - name: citrix-ingressgateway-ca-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-ca-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
     {{- range .Values.ingressGateway.secretVolumes }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName | quote }}
          optional: true
     {{- end }}
{{- end }}
      - name: cpx-conf
        emptyDir: {}
      - name: cpx-crash
        emptyDir: {}
      - name: cpx-pwd
        emptyDir: {}
      - name: certs
        emptyDir: {}
      - name: istiod-ca-cert
        configMap:
          defaultMode: 0777
          name: istio-ca-root-cert
      containers:
{{- if eq .Values.metricExporter.required true }}
        - name: exporter
          image: {{ .Values.metricExporter.image }}
          imagePullPolicy: IfNotPresent
          args:
          - "--target-nsip=127.0.0.1"
          - "--port={{ .Values.metricExporter.port }}"
          - "--log-level={{ .Values.metricExporter.logLevel }}"
          - "--secure=false"
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
          - name: nslogin
            mountPath: "/mnt/nslogin"
            readOnly: true
{{- end }}
        - name: istio-adaptor
          image: {{ .Values.xDSAdaptor.image }}
          imagePullPolicy: {{ .Values.xDSAdaptor.imagePullPolicy }} 
          args:
          - -ads-server
{{- if eq .Values.xDSAdaptor.secureConnect true }}
          - {{ .Values.istioPilot.name}}.{{ .Values.istioPilot.namespace }}.svc:{{ .Values.istioPilot.secureGrpcPort }} # istiod.istio-system.svc:15012
{{- else }}
          - {{ .Values.istioPilot.name}}.{{ .Values.istioPilot.namespace }}.svc:{{ .Values.istioPilot.insecureGrpcPort }} # istiod.istio-system.svc:15010
{{- end }}
          - -istio-proxy-type
          - {{ .Values.xDSAdaptor.proxyType | default "router" | quote }}
{{- if .Values.istioPilot.SAN }}
          - -ads-server-SAN
          - {{ .Values.istioPilot.SAN | default "" }}
{{- end }}
          - -ads-secure-connect={{ .Values.xDSAdaptor.secureConnect | default true }}
          - -citrix-adc
          - "http://127.0.0.1"
          - -citrix-adc-vip
          - "nsip"
          - -citrix-adc-password
          - "/var/deviceinfo/random_id"
{{- if .Values.ADMSettings.ADMIP }}
          - -citrix-adm
          - {{ .Values.ADMSettings.ADMIP }}
{{- end }}
{{- if .Values.ADMSettings.licenseServerIP }}
          - -citrix-license-server
          - {{ .Values.ADMSettings.licenseServerIP }}
{{- end }}
{{- if .Values.coe.coeURL }}
          - -coe
          - {{ .Values.coe.coeURL }}
{{- end }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
               fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: APPLICATION_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
{{- if .Values.certProvider.caAddr }}
          - name: CA_ADDR
            value: {{ .Values.certProvider.caAddr }}:{{ .Values.certProvider.caPort}} #istiod.istio-system.svc:15012
          - name: TRUST_DOMAIN
            value: {{ .Values.certProvider.trustDomain }} #cluster.local
          - name: CLUSTER_ID 
            value: {{ .Values.certProvider.clusterId }} #Kubernetes
          - name: CERT_TTL_IN_HOURS 
            value: {{ .Values.certProvider.certTTLinHours | quote }}
{{- end }}
          - name: NS_USER
            valueFrom:
              secretKeyRef:
                name: nslogin
                key: username
          - name: NS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nslogin
                key: password
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 32024 # UID of istio-adaptor container's user
          volumeMounts:
          - mountPath: /var/deviceinfo
            name: cpx-pwd
          - mountPath: /etc/certs
            name: certs
          - name: istiod-ca-cert
            mountPath: /etc/rootcert/
          - mountPath: /etc/nslogin 
            name: nslogin
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-certs # Make sure that Gateway definition has this path mentioned in server.tls section for SIMPLE TLS
            name: citrix-ingressgateway-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls section for MUTUAL TLS
            name: citrix-ingressgateway-ca-certs
            readOnly: true
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
          {{- range .Values.ingressGateway.secretVolumes }}
          - name: {{ .name }}
            mountPath: {{ .mountPath | quote }}
            readOnly: true
          {{- end }}
{{- end }}
        - name: citrix-ingressgateway
          image: "{{ .Values.ingressGateway.image }}"
          imagePullPolicy: {{ .Values.ingressGateway.imagePullPolicy }}
          securityContext:
            privileged: true
          ports:
            - containerPort: 80
            - containerPort: 443
{{- if .Values.ingressGateway.mgmtHttpPort }}
            - containerPort: {{ .Values.ingressGateway.mgmtHttpPort }}
{{- end }}
{{- if .Values.ingressGateway.mgmtHttpsPort }}
            - containerPort: {{ .Values.ingressGateway.mgmtHttpsPort }}
{{- end }}
{{- if eq .Values.ingressGateway.exposeNonHttpService true }}
{{- range .Values.ingressGateway.tcpPort }}
            - containerPort: {{ .port }}
{{- end }}
{{- end }}
          volumeMounts:
          - mountPath: /cpx/conf/
            name: cpx-conf
          - mountPath: /cpx/crash/
            name: cpx-crash
          - mountPath: /var/deviceinfo
            name: cpx-pwd
          env:
          - name: "EULA"
            value: "{{ .Values.ingressGateway.EULA }}"
          - name: "MGMT_HTTP_PORT"
            value: "{{ .Values.ingressGateway.mgmtHttpPort }}"
          - name: "MGMT_HTTPS_PORT"
            value: "{{ .Values.ingressGateway.mgmtHttpsPort }}"
          - name: "NS_CPX_LITE"
            value: "{{ .Values.ingressGateway.lightWeightCPX }}"
{{- if or .Values.coe.coeURL .Values.ADMSettings.ADMIP }}
          - name: "NS_ENABLE_NEWNSLOG"
            value: "1"
{{- end }}
          - name: "KUBERNETES_TASK_ID"
            value: ""
          - name: "LS_IP"
            value: {{ .Values.ADMSettings.licenseServerIP | default "" }} 
          - name: "LS_PORT"
            value: "{{ .Values.ADMSettings.licenseServerPort}}"
{{- if .Values.ADMSettings.ADMFingerPrint }}
          - name: "NS_MGMT_SERVER"
            value: {{ .Values.ADMSettings.ADMIP }}
          - name: "NS_MGMT_FINGER_PRINT"
            value: {{ .Values.ADMSettings.ADMFingerPrint | quote }}
          - name: "NS_HTTP_PORT"
            value: {{ .Values.ingressGateway.mgmtHttpPort | quote }}
          - name: "NS_HTTPS_PORT"
            value: {{ .Values.ingressGateway.mgmtHttpsPort | quote }}
{{- end }}
          - name: "LOGSTREAM_COLLECTOR_IP"
            value: {{ .Values.ADMSettings.ADMIP | default ""}} 
#To povision bandwidth based licensing to Citrix ADC CPX from ADM, needs bandwidth
{{- if and ( .Values.ADMSettings.licenseServerIP ) (eq .Values.ADMSettings.bandWidthLicense true) }}
          - name: "BANDWIDTH"
            value: {{ required "Mention bandwidth for bandwidth based licensing" .Values.ADMSettings.bandWidth | quote }}
{{- end }}
#for multiple-PE support, need to set CPX_CORES
{{- if .Values.ADMSettings.licenseServerIP }}
{{- if or (eq .Values.ADMSettings.vCPULicense true) (eq .Values.ADMSettings.bandWidthLicense true) }}
          - name: "CPX_CORES"
            value: {{ .Values.ADMSettings.cpxCores | default 1 | quote }}
{{- end }}
{{- end }}
{{- if or (.Values.ADMSettings.ADMIP) (.Values.ADMSettings.licenseServerIP) }}
          - name: NS_MGMT_USER
            valueFrom:
              secretKeyRef:
                name: admlogin
                key: username
          - name: NS_MGMT_PASS
            valueFrom:
              secretKeyRef:
                name: admlogin
                key: password
{{- end }}
---
{{ else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citrix-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
  template:
    metadata:
      labels:
        app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        prometheus.io/port: "{{ .Values.metricExporter.port }}"
        prometheus.io/scrape: "true"
    spec:
      containers:
{{- if eq .Values.metricExporter.required true }}
      - name: exporter
        image: {{ .Values.metricExporter.image }}
        imagePullPolicy: {{ .Values.metricExporter.imagePullPolicy }}
        args:
        - "--target-nsip={{- include "exporter_nsip" . -}}"
        - "--port={{ .Values.metricExporter.port }}"
        - "--secure={{ .Values.metricExporter.secure | lower}}"
        - "--log-level={{ .Values.metricExporter.logLevel }}"
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: nslogin
          mountPath: "/mnt/nslogin"
          readOnly: true
{{- end }}
      - name: istio-adaptor
        image: {{ .Values.xDSAdaptor.image }}
        imagePullPolicy: {{ .Values.xDSAdaptor.imagePullPolicy }}  
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: APPLICATION_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
{{- if .Values.certProvider.caAddr }}
        - name: CA_ADDR
          value: {{ .Values.certProvider.caAddr }}:{{ .Values.certProvider.caPort}} #istiod.istio-system.svc:15012
        - name: TRUST_DOMAIN
          value: {{ .Values.certProvider.trustDomain }} #cluster.local
        - name: CLUSTER_ID 
          value: {{ .Values.certProvider.clusterId }} #Kubernetes
        - name: CERT_TTL_IN_HOURS 
          value: {{ .Values.certProvider.certTTLinHours | quote }}
{{- end }}
        - name: NS_USER
          valueFrom:
            secretKeyRef:
              name: nslogin
              key: username
        - name: NS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nslogin
              key: password
        args: 
        - -ads-server
{{- if eq .Values.xDSAdaptor.secureConnect true }}
        - {{ .Values.istioPilot.name}}.{{ .Values.istioPilot.namespace }}.svc:{{ .Values.istioPilot.secureGrpcPort }} # istiod.istio-system.svc:15012
{{- else }}
        - {{ .Values.istioPilot.name}}.{{ .Values.istioPilot.namespace }}.svc:{{ .Values.istioPilot.insecureGrpcPort }} # istiod.istio-system.svc:15010
{{- end }}
        - -istio-proxy-type
        - {{ .Values.xDSAdaptor.proxyType | default "router" | quote }}
{{- if .Values.istioPilot.SAN }}
        - -ads-server-SAN
        - {{ .Values.istioPilot.SAN | default "" }}
{{- end }}
        - -ads-secure-connect={{ .Values.xDSAdaptor.secureConnect | default true }}
        - -citrix-adc
        - {{ required "Mention Citrix ADC IP/URL in https://<ip>[:port] format" .Values.ingressGateway.netscalerUrl }}
        - -citrix-adc-vip
        - {{ required "Mention Vserver IP to be configured on Citrix ADC" .Values.ingressGateway.vserverIP }}
        - -citrix-adc-user
        - "/etc/nslogin/username"
        - -citrix-adc-password
        - "/etc/nslogin/password"
        # If using VPX/MPX as Ingress gateway, then specify the network profile name 
        # which was provided to Citrix Node Controller (CNC)
{{- if .Values.ingressGateway.netProfile }}
        - -citrix-adc-net-profile
        - {{ .Values.ingressGateway.netProfile }}
{{- end }}
        - -citrix-adm
        - "" 
{{- if .Values.coe.coeURL }}
        - -coe
        - {{ .Values.coe.coeURL }}
{{- end }}
{{- if .Values.ingressGateway.adcServerName }}
        - -citrix-adc-server-name
        - {{ .Values.ingressGateway.adcServerName }}
        - -citrix-adc-server-ca
        - "/etc/nitro/root-cert.pem"
{{- end }}
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 32024 # UID of istio-adaptor container's user
        volumeMounts:
        - mountPath: /etc/certs
          name: certs
        - name: istiod-ca-cert
          mountPath: /etc/rootcert/
        - mountPath: /etc/nslogin
          name: nslogin
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-certs # Make sure that Gateway definition has this path mentioned in server.tls section for SIMPLE TLS
          name: citrix-ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls section for MUTUAL TLS
          name: citrix-ingressgateway-ca-certs
          readOnly: true  
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
        {{- range .Values.ingressGateway.secretVolumes }}
        - name: {{ .name }}
          mountPath: {{ .mountPath | quote }}
          readOnly: true
        {{- end }}
{{- end }}
{{- if .Values.ingressGateway.adcServerName }}
        - mountPath: /etc/nitro/
          name: citrix-adc-cert
          readOnly: true
{{- end }}
      volumes:
      - name: nslogin
        secret:
          optional: true
          secretName: nslogin
      - name: certs
        emptyDir: {}
      - name: istiod-ca-cert
        configMap:
          defaultMode: 0777
          name: istio-ca-root-cert
      - name: citrix-ingressgateway-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
      - name: citrix-ingressgateway-ca-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-ca-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway 
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
     {{- range .Values.ingressGateway.secretVolumes }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName | quote }}
          optional: true
     {{- end }}
{{- end }}
{{- if .Values.ingressGateway.adcServerName }}
      - name: citrix-adc-cert
        secret:
          optional: true
          secretName: "citrix-adc-cert" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
{{- end }}
---
{{- end}}
